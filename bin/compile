#!/bin/sh
# example: https://github.com/heroku/heroku-buildpack-hello/blob/master/bin/compile


# fail fast
set -e

# config
APACHE_VERSION="2.2.19"
APACHE_PATH="apache"
PHP_VERSION="5.3.6"
PHP_PATH="php"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`



indent() {
  sed -u 's/^/       /'
}

echo "-----> Compiling Rocco site"

# Install Rocco into hidden directory in app roote

cat << EOF > ~/.gemrc
gemhome: $BUILD_DIR/.gems
gempath:
- $BUILD_DIR/.gems
EOF

/usr/local/bin/gem install rdiscount | indent
/usr/local/bin/gem install rocco -v 0.8 | indent

# Run Jekyll
echo "Running Rocco" | indent
export GEM_HOME=$1/.gems
export PATH=$BUILD_DIR/.gems/bin:$PATH
cd $BUILD_DIR
$BUILD_DIR/.gems/bin/rocco **/*.rb --output doc | indent


# include .files when moving things around
shopt -s dotglob

# move app things to www
mkdir -p $CACHE_DIR/www
mv doc/* $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

# unpack cache
for DIR in $APACHE_PATH $PHP_PATH ; do
  rm -rf $DIR
  if [ -d $CACHE_DIR/$DIR ]; then
    cp -r $CACHE_DIR/$DIR $DIR
  fi
done

# install apache if needed
if [ ! -d $APACHE_PATH ]; then
  APACHE_URL="https://s3.amazonaws.com/php-lp/apache-$APACHE_VERSION.tar.gz"
  echo "-----> Bundling Apache v$APACHE_VERSION"
  curl --silent --max-time 60 --location $APACHE_URL | tar xz
fi


cat >>boot.sh <<EOF
export LD_LIBRARY_PATH=/app/apache/lib/
/app/apache/bin/htpasswd -bc /app/.passwords \$USERNAME \$PASSWORD
sed -i 's/Listen 80/Listen '\$PORT'/' /app/apache/conf/httpd.conf
echo "Launching apache"
exec /app/apache/bin/httpd -X
EOF

chmod +x boot.sh
